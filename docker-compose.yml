version: "2"

services:
  postgres:
    image: postgres:10.0
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER:     aleph
      POSTGRES_PASSWORD: aleph
      POSTGRES_DATABASE: aleph

  elasticsearch:
    image: alephdata/platform-elasticsearch:2.1.4
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  rabbitmq:
    image: rabbitmq
    hostname: queue
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  redis:
    image: redis:alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data

  convert-document:
    image: alephdata/aleph-convert-document
    restart: on-failure
    tmpfs:
      - /tmp
      - /root/.config
    mem_limit: 2g
    expose:
      - 3000

  extract-entities:
    image: alephdata/aleph-extract-entities
    restart: on-failure
    mem_limit: 4g
    expose:
      - 50000

  recognize-text:
    image: alephdata/aleph-recognize-text
    restart: on-failure
    mem_limit: 2g
    expose:
      - 50000

  worker:
    image: alephdata/aleph
    command: celery -A aleph.queues -B -c 4 -l INFO worker
    restart: on-failure
    links:
      - postgres
      - elasticsearch
      - rabbitmq
      - redis
      - convert-document
      - extract-entities
      - recognize-text
    tmpfs:
      - /tmp
    volumes:
      - archive-data:/data
      - "/:/host"
    env_file:
      - aleph.env
  
  shell:
    image: alephdata/aleph
    command: /bin/bash
    links:
      - postgres
      - elasticsearch
      - rabbitmq
      - redis
      - convert-document
      - extract-entities
      - recognize-text
      - worker
    tmpfs:
      - /tmp
    volumes:
      - archive-data:/data
      - "./mappings:/aleph/mappings"
      - "/:/host"
    env_file:
      - aleph.env

  beat:
    image: alephdata/aleph
    command: celery -A aleph.queues beat -s /var/lib/celerybeat-schedule.db
    links:
      - postgres
      - elasticsearch
      - rabbitmq
      - redis
      - worker
      - convert-document
      - extract-entities
      - recognize-text
    tmpfs:
      - /tmp
    volumes:
      - archive-data:/data
    env_file:
      - aleph.env

  api:
    image: alephdata/aleph
    command: gunicorn -w 8 -b 0.0.0.0:8000 --log-level info --log-file /var/log/gunicorn.log aleph.manage:app
    expose:
      - 8000
    links:
      - postgres
      - elasticsearch
      - rabbitmq
      - redis
      - worker
    tmpfs:
      - /tmp
    volumes:
      - archive-data:/data
    env_file:
      - aleph.env

  ui:
    image: alephdata/aleph-ui-production
    links:
      - api
    ports:
      - "8080:8080"

volumes:
  archive-data: {}
  postgres-data: {}
  rabbitmq-data: {}
  redis-data: {}
  elasticsearch-data: {}