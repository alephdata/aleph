version: "3.2"

services:
  postgres:
    image: postgres:10.0
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: aleph
      POSTGRES_PASSWORD: aleph
      POSTGRES_DATABASE: aleph

  elasticsearch:
    image: ghcr.io/alephdata/aleph-elasticsearch:fc76f89bb369132171af4629cc12cd7f57098ba6
    hostname: elasticsearch
    environment:
      - discovery.type=single-node
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  redis:
    image: redis:alpine
    command: ["redis-server", "--save", "3600", "10"]
    volumes:
      - redis-data:/data

  convert-document:
    image: alephdata/convert-document:38f168c2eb86013de95861c895bfdae0c4de7611
    read_only: true
    restart: on-failure
    user: app
    tmpfs: /tmp

  ingest-file:
    image: alephdata/ingest-file:19c1ae980fd09d769e88fe50e50db8ab75f7fbf0
    tmpfs:
      - /tmp:mode=777
    volumes:
      - archive-data:/data
    depends_on:
      - postgres
      - redis
      - convert-document
    restart: on-failure
    env_file:
      - aleph.env

  worker:
    image: alephdata/aleph:${ALEPH_TAG:-3.9.3}
    command: aleph worker
    restart: on-failure
    depends_on:
      - postgres
      - elasticsearch
      - redis
      - ingest-file
    tmpfs:
      - /tmp
    volumes:
      - archive-data:/data
    env_file:
      - aleph.env

  shell:
    image: alephdata/aleph:${ALEPH_TAG:-3.9.3}
    command: /bin/bash
    depends_on:
      - postgres
      - elasticsearch
      - redis
      - ingest-file
      - worker
    tmpfs:
      - /tmp
    volumes:
      - archive-data:/data
      - "./mappings:/aleph/mappings"
      - "/:/host"
    env_file:
      - aleph.env

  api:
    image: alephdata/aleph:${ALEPH_TAG:-3.9.3}
    command: gunicorn -w 6 -b 0.0.0.0:8000 --log-level debug --log-file - aleph.wsgi:app
    expose:
      - 8000
    depends_on:
      - postgres
      - elasticsearch
      - redis
      - worker
      - ingest-file
    tmpfs:
      - /tmp
    volumes:
      - archive-data:/data
    env_file:
      - aleph.env

  ui:
    image: alephdata/aleph-ui-production:${ALEPH_TAG:-3.9.3}
    depends_on:
      - api
    ports:
      - "8080:8080"

volumes:
  archive-data: {}
  postgres-data: {}
  redis-data: {}
  elasticsearch-data: {}
