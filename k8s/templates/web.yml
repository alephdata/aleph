apiVersion: v1
kind: Service
metadata:
  name: search-web
  labels:
    app: search-web
spec:
  type: NodePort
  selector:
    app: search-web
  ports:
    - port: 80
      targetPort: 80
      name: http
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: search-web-config
data:
  mime.types: |
    types {
        text/html                                        html htm shtml;
        text/css                                         css;
        text/xml                                         xml;
        image/gif                                        gif;
        image/jpeg                                       jpeg jpg;
        application/javascript                           js;
        image/png                                        png;
        image/svg+xml                                    svg svgz;
        image/tiff                                       tif tiff;
        image/x-icon                                     ico;
        image/x-jng                                      jng;
        application/font-woff                            woff;
        application/json                                 json;
        application/zip                                  zip;
    }
  nginx.conf: |
    worker_processes {{ .Values.web.workerProcesses }};

    events {
      worker_connections {{ .Values.web.workerConnections }};
    }

    http {
      include mime.types;
      index index.html;
      sendfile on;
      client_max_body_size {{ .Values.web.clientMaxBodySize }};
      client_body_timeout {{ .Values.web.clientMaxBodyTimeout }};
      proxy_connect_timeout {{ .Values.web.proxyConnectTimeout }};
      proxy_read_timeout {{ .Values.web.proxyReadTimeout }};
      proxy_send_timeout {{ .Values.web.proxySendTimeout }};
      send_timeout {{ .Values.web.sendTimeout }};
      proxy_cache {{ .Values.web.proxyCache }};
      proxy_buffering {{ .Values.web.proxyBuffering }};
      proxy_request_buffering {{ .Values.web.proxyRequestBuffering }};
      keepalive_timeout {{ .Values.web.keepliveTimeout }};
      keepalive_requests {{ .Values.web.keepaliveRequests }};

      server {
        listen 80 default_server;
        
        location / {
          return 200 'under maintenance - please give us 30mins';
        }

        location /healthz {
          return 200 'ok';
        }
      }

      upstream search-api {
        server search-api.default.svc.cluster.local:8000;
      }

      server {
        listen 80;
        server_name {{ .Values.web.alephServerName }};

        if ($http_x_forwarded_proto = "http") {
          return 301 https://$host$request_uri;
        }

        location / {
          root /assets;
          try_files $uri $uri/ /index.html;
          expires 2d;
          access_log off;
          add_header Cache-Control "public";
          gzip_vary on;
          gzip_static on;
          gzip_proxied any;
          gzip_types text/plain text/xml text/css text/javascript application/x-javascript;
        }

        location /api {
          proxy_pass         http://search-api;
          proxy_redirect     off;
          proxy_set_header   Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: search-web
  labels:
    app: search-web
spec:
  replicas: {{ .Values.web.replicas }}
  selector:
    matchLabels:
      app: search-web
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.web.maxSurge }}
      maxUnavailable: {{ .Values.web.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: search-web
    spec:
      nodeSelector:
        tier: application
        lifespan: permanent
      restartPolicy: Always
      volumes:
        - name: search-web-config
          configMap:
            name: search-web-config
      containers:
        - name: search-web
          image: {{ .Values.web.image }}
          imagePullPolicy: Always
          resources:
            requests:
              memory: {{ .Values.web.resources.requests.memory }}
          ports:
            - containerPort: 80
              name: http
          volumeMounts:
            - name: search-web-config
              mountPath: /etc/nginx
              readOnly: true
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 3
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 3
            periodSeconds: 5