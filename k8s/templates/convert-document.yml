apiVersion: v1
kind: Service
metadata:
  name: search-convert-document
  labels:
    app: search-convert-document
spec:
  selector:
    app: search-convert-document
  type: ClusterIP
  ports:
    - port: 3000
      protocol: "TCP"
      name: api
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: search-convert-document
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: search-convert-document
  minReplicas: {{ .Values.covert-document.minReplicas }}
  maxReplicas: {{ .Values.covert-document.maxReplicas }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: {{ .Values.covert-document.targetAverageCPUUtilization }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: search-convert-document-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: search-convert-document
  policyTypes:
    - Egress
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: search-convert-document
  labels:
    app: search-convert-document
spec:
  selector:
    matchLabels:
      app: search-convert-document
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.covert-document.maxSurge }}
      maxUnavailable: {{ .Values.covert-document.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: search-convert-document
    spec:
      nodeSelector:
        tier: application
        lifespan: transient
      restartPolicy: Always
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      containers:
        - name: search-convert-document
          image: {{ .Values.convert-document.image }}
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              name: http
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          resources:
            requests:
              memory: {{ .Value.covert-document.resources.requests.memory }}
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 15
            timeoutSeconds: 301
            periodSeconds: 302
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 15
            timeoutSeconds: 301
            periodSeconds: 302