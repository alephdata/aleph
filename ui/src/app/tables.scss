@import "~@blueprintjs/core/src/blueprint.scss";
@import "./variables.scss";

// Column & row customisation for any tables.
table {
  // Force a table-row to be a single line, truncating contents of large cells.
  tr.nowrap > td, td.nowrap,
  tr.nowrap > th {
    max-width: 0; // somehow, this seems to make keep column widths in check.
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;

    &.expand {
      width: 2em;
      max-width: 2em;
      overflow: visible;
      padding-left: 0;
      padding-top: ($aleph-grid-size / 1.2);
      .bp3-button {
        margin-left: 0;
      }
    }
  }

  // Make these columns take the minimal width that fits the content
  tr td.date {
    width: 1%;
    white-space: nowrap;
    overflow: visible;
    max-width: unset;
    text-overflow: unset;
  }

  tr td.select {
    width: 1%;
    white-space: nowrap;
    overflow: visible;
    max-width: unset;
    text-overflow: unset;

    .bp3-control {
      padding-left: 0;
    }
  }

  tr td.file-size {
    width: 10%;
    white-space: nowrap;
    overflow: visible;
    max-width: unset;
    text-overflow: unset;
    text-align: right;
  }

  tr.active {
    background-color: $aleph-theme-intent;
    color: white;

    td {
      background-color: $aleph-theme-intent;
      color: white;

      a,
      a:link,
      a:visited,
      a:hover,
      a:active {
        color: white;
      }
    }
  }

  th.wide, td.wide {
    width: 40%;
    max-width: unset;
  }

  th.narrow, td.narrow {
    width: 1%;
    max-width: unset;
  }

  td.entity {
    font-weight: bold;
    max-width: unset;
  }

  tr.prefix {
    td {
      border-bottom: 0px !important;
      padding-bottom: 0;
    }
  }

  th.numeric, td.numeric, th.number, td.number {
    width: 1%;
    text-align: right;
    white-space: nowrap;
    overflow: visible;
    max-width: unset;
    text-overflow: unset;
    font-variant-numeric: tabular-nums;

    // Float on the right, so that numbers overflow to the left.
    // (FormattedNumber creates a <span>)
    & > span {
      float: right;
    }
  }
}

// Tables as normally used in ContentPane
table.data-table {
  @extend .bp3-html-table;
  width: 100%;

  td {
    border-bottom: 1px solid $aleph-table-border-color;
  }

  th,
  th:hover {
    white-space: nowrap;
    background: $aleph-table-heading-background;
  }

  tbody tr:first-child td {
    box-shadow: inset 0 $table-border-width 0 0 $aleph-table-border-color;
  }
}

table.settings-table {
  @extend .data-table;

  th {
    background-color: $aleph-facet-background;
  }
}

// Two-column 'tables' as normally used in InfoPane
ul.info-sheet,
ul.info-rank {
  padding: 0;
  list-style: none;

  li {
    display: flex;

    .key, .value {
      overflow: hidden;
      word-wrap: break-word;
    }

    .key {
      padding-right: $aleph-grid-size;
    }

    .value {
      font-variant-numeric: tabular-nums;
      line-height: 1.5;
    }
  }
}

ul.info-sheet {
  li {
    flex-direction: row;
    padding-bottom: $aleph-grid-size * 1.5;

    &.tight {
      padding-bottom: 0;
    }

    .key {
      color: $aleph-greyed-text;
      // font-size: $pt-font-size-small;
      width: 30%;
    }

    .value {
      width: 70%;
    }
  }
}

ul.info-rank li {
  flex-flow: row nowrap;
  width: 100%;
  padding-bottom: $aleph-grid-size;

  // Ensure things stay on a single line, truncating the key if needed.
  .category {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .count {
    white-space: nowrap;
    overflow: visible;
    color: $aleph-greyed-text;
    margin-left: auto; // = align right
  }
}
