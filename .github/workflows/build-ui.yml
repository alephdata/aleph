name: Build UI

on:
  push:
    paths-ignore:
      - "aleph/**"
      - "contrib/**"
      - "helm/**"
      - "mappings/**"
      - "site/**"
      - "docs/**"
      - "requirements.txt"
      - "requirements-dev.txt"

permissions:
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup
        run: echo "ALEPH_SECRET=batman\n" >> aleph.env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build development image
        uses: docker/build-push-action@v6
        with:
          context: ./ui
          target: builder
          push: false
          load: true
          tags: ghcr.io/alephdata/aleph-ui:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - run: docker image ls

      - name: Check code formatting
        run: make format-check-ui

      - name: Run linter
        run: make lint-ui

      - name: Run tests
        run: make test-ui

      - name: Build production image
        uses: docker/build-push-action@v6
        with:
          context: ./ui
          push: false
          tags: ghcr.io/alephdata/aleph-ui-production:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Push docker image (tagged)
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
          export ALEPH_TAG=${GITHUB_REF/refs\/tags\//}
          docker tag ghcr.io/alephdata/aleph-ui-production:${GITHUB_SHA} ghcr.io/alephdata/aleph-ui-production:${ALEPH_TAG};
          docker push ghcr.io/alephdata/aleph-ui-production:${ALEPH_TAG};

      - name: Tag latest image
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags') && !startsWith(github.ref, 'refs/tags/test-')
        run: |
          docker tag ghcr.io/alephdata/aleph-ui-production:${GITHUB_SHA} ghcr.io/alephdata/aleph-ui-production:latest;
          docker push ghcr.io/alephdata/aleph-ui-production:latest;
