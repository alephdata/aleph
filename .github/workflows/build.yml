name: package

on: [push]

jobs:
  docker-ui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build development image
        run: |
          docker build -t alephdata/aleph-ui:${GITHUB_SHA} ui
          docker tag alephdata/aleph-ui:${GITHUB_SHA} alephdata/aleph-ui:latest
      - name: Build production image
        run: |
          docker build -t alephdata/aleph-ui-production:${GITHUB_SHA} -f ui/Dockerfile.production ui
      - name: Push docker image (hash)
        run: |
          docker login -u ${{ secrets.docker_user }} -p ${{ secrets.docker_password }}
          docker push alephdata/aleph-ui-production:${GITHUB_SHA}
  docker-ingest-file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build docker image
        run: |
          docker build -t alephdata/ingest-file:${GITHUB_SHA} services/ingest-file
          docker tag alephdata/ingest-file:${GITHUB_SHA} alephdata/ingest-file:latest
      - name: Push docker image (hash)
        run: |
          docker login -u ${{ secrets.docker_user }} -p ${{ secrets.docker_password }}
          docker push alephdata/ingest-file:${GITHUB_SHA}
  docker-aleph:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build docker image
        run: |
          docker build --cache-from alephdata/aleph:latest -t alephdata/aleph:${GITHUB_SHA} .
          docker tag alephdata/aleph:${GITHUB_SHA} alephdata/aleph:latest
      - name: Push docker image (hash)
        run: |
          docker login -u ${{ secrets.docker_user }} -p ${{ secrets.docker_password }}
          docker push alephdata/aleph:${GITHUB_SHA}
  test-aleph:
    runs-on: ubuntu-latest
    needs:
      - docker-aleph
      - docker-ingest-file
      - docker-ui
    steps:
      - uses: actions/checkout@v1
      - name: Set up
        run: |
          sudo sysctl -w vm.max_map_count=262144
          sudo echo "ALEPH_SECRET=batman\n" >> aleph.env
          docker --version
          docker-compose --version
      - name: Docker pull and start
        run: |
          echo "${GITHUB_REF}"
          ALEPH_TAG=${GITHUB_SHA} docker-compose pull --quiet --parallel elasticsearch convert-document ingest-file worker
          make ALEPH_TAG=${GITHUB_SHA} services
          sleep 10
      - name: Run ingest tests
        run: make ALEPH_TAG=${GITHUB_SHA} ingest-test
      - name: Run aleph tests
        run: make ALEPH_TAG=${GITHUB_SHA} test
      - name: Push docker images for tags
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: |
          export ALEPH_TAG=${GITHUB_REF/refs\/tags\//}
          docker login -u ${{ secrets.docker_user }} -p ${{ secrets.docker_password }}
          docker pull alephdata/aleph-ui-production:${GITHUB_SHA}
          for IMAGE in aleph aleph-ui-production ingest-file; do
            docker tag alephdata/${IMAGE}:${GITHUB_SHA} alephdata/${IMAGE}:${ALEPH_TAG};
            docker push alephdata/${IMAGE}:${ALEPH_TAG};
            docker tag alephdata/${IMAGE}:${GITHUB_SHA} alephdata/${IMAGE}:latest;
            docker push alephdata/${IMAGE}:latest;
          done;
