apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.global.namingPrefix }}-worker-index
  labels:
    app: {{ .Values.global.namingPrefix }}-worker-index
spec:
  replicas: {{ .Values.workerindex.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.global.namingPrefix }}-worker-index
  strategy: {{- toYaml .Values.workerindex.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        app: {{ .Values.global.namingPrefix }}-worker-index
      annotations: {{- toYaml .Values.workerindex.podAnnotations | nindent 8 }}
    spec:
      nodeSelector: {{- toYaml .Values.workerindex.nodeSelector | nindent 8 }}
      restartPolicy: Always
      securityContext: {{- toYaml .Values.workerindex.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          command: ["aleph", "worker"]
          volumeMounts:
            {{ if .Values.global.google }}
            - mountPath: /var/secrets/google
              name: service-account-aleph
              readOnly: true
            {{ end }}
            - mountPath: /tmp
              name: tmp-volume
            - mountPath: /home/app
              name: home-volume
          securityContext:
            {{- toYaml .Values.workerindex.containerSecurityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.workerindex.containerResources | nindent 12 }}
          envFrom:
            - secretRef:
                name: aleph-secrets
          env:
            {{- range $key, $value := .Values.global.commonEnv }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := .Values.global.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := .Values.workerindex.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{ if .Values.global.google }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/secrets/google/service-account.json
            {{ end }}
            {{ if .Values.global.prometheus.enabled }}
            - name: PROMETHEUS_ENABLED
              value: "true"
            {{ end }}
      volumes:
        {{ if .Values.global.google }}
        - name: service-account-aleph
          secret:
            secretName: service-account-aleph
        {{ end }}
        - name: home-volume
          emptyDir:
            medium: Memory
        - name: tmp-volume
          emptyDir: {}
---
{{ if .Values.global.prometheus.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.global.namingPrefix }}-worker-index
  labels:
    app: {{ .Values.global.namingPrefix }}-worker-index
spec:
  selector:
    app: {{ .Values.global.namingPrefix }}-worker-index
  ports:
    - port: 9100
      targetPort: 9100
      protocol: "TCP"
      name: metrics
{{ end }}
---
{{ if .Values.global.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ .Values.global.namingPrefix }}-worker-index
  labels:
    app: {{ .Values.global.namingPrefix }}-worker-index
spec:
  selector:
    matchLabels:
      app: {{ .Values.global.namingPrefix }}-worker-index
  endpoints:
    - interval: "30s"
      port: metrics
{{ end }}
